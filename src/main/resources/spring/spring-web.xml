<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 1.开启mvc注解模式 -->
    <mvc:annotation-driven />
    
	<!-- 2.静态资源默认 Servlet 配置 -->
    <!-- (1)加入对静态资源默认处理包括图片，js、css; mapping 匹配浏览器映射路径  location 实际文件路径 此处 ‘/’为webapp目录-->
    <mvc:resources location="/resources/" mapping="/resources/**" />
    <!-- 为Vue页面配置静态资源映射 -->
    <!-- <mvc:resources location="/WEB-INF/html/dist/static/" mapping="/superadmin/static/**" /> -->
    <!-- (2)允许 “/”做整体映射 -->
    <mvc:default-servlet-handler />
	
	<!-- 
		3.定义视图解析器 
	-->
    <bean id = "viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/html/" />
        <property name="suffix" value=".html" />
    </bean>

	<!--配置swagger2-->
	<!--将静态资源交由默认的servlet处理-->
	<mvc:default-servlet-handler />
	<!--向容器自动注入配置-->
	<context:annotation-config />
	<!--自动扫描，使springMVC认为包下用了@controller注解的类是控制器-->
	<context:component-scan base-package="com.study.o2o.web"/>
	<!--重要！将你的SwaggerConfig配置类注入-->
	<bean class="com.study.o2o.config.SwaggerConfig"/>
	<!--重要！配置swagger资源不被拦截-->
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
    
    <!-- 文件上传解析器 -->
    <bean id = "multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- 默认字符编码 -->
    	<property name="defaultEncoding" value = "utf-8"></property>
    	<!-- 文件最大上传值  1024*1024*20 20M -->
    	<property name="maxUploadSize" value = "20971520"></property>    	
    	<!-- 内存设置  20M-->
    	<property name="maxInMemorySize" value = "20971520"></property>
    </bean>
   <!-- 4.配置扫描web包下 Controller 注解的类 -->
   <context:component-scan base-package="com.study.o2o.web" />
   <!-- 5.权限拦截器 -->
   <mvc:interceptors>
   	<!-- 校验是否已经登录了店家管理系统的拦截器 -->
   	<mvc:interceptor>
   		<!-- 对shopadmin包下的所有类进行拦截  并交由shopLoginInterceptor类处理-->
   		<mvc:mapping path="/shopadmin/**"/>
   		<!-- userproductMap 05.24 写入用户数据 -->
   		<mvc:exclude-mapping path="/shopadmin/adduserproductmap"/>
   		<bean id = "ShopInterceptor" 
   			class = "com.study.o2o.interceptor.shopadmin.shopLoginInterceptor"/>
   	</mvc:interceptor>
   	<!-- 校验是否对该店铺具有操作权限 -->
   	<mvc:interceptor>
   		<mvc:mapping path="/shopadmin/**"/>
   		<!-- shoplist page -->
   		<mvc:exclude-mapping path="/shopadmin/shoplist"/>
   		<mvc:exclude-mapping path="/shopadmin/getshoplist"/>
   		<!-- shopregister page -->
   		<mvc:exclude-mapping path="/shopadmin/getshopinitinfo"/>
   		<mvc:exclude-mapping path="/shopadmin/registershop"/>
   		<mvc:exclude-mapping path="/shopadmin/shopoperation"/>
   		<!-- shopmanage page -->
   		<mvc:exclude-mapping path="/shopadmin/shopmanagement"/>
   		<mvc:exclude-mapping path="/shopadmin/getshopmanagementinfo"/>
   		<mvc:exclude-mapping path="/shopadmin/adduserproductmap"/>   		
   		<bean id = "ShopPermissionInterceptor"
   			class = "com.study.o2o.interceptor.shopadmin.ShopPermissionInterceptor"/>
   	</mvc:interceptor>
   </mvc:interceptors>
</beans>